// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using megaapi.data;

#nullable disable

namespace megaapi.Migrations
{
    [DbContext(typeof(MEGADbContext))]
    partial class MEGADbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("megaapi.models.Ciudad", b =>
                {
                    b.Property<int>("Idciudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idciudad"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idciudad");

                    b.ToTable("Ciudad", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Colonia", b =>
                {
                    b.Property<int>("IdColonia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColonia"));

                    b.Property<int>("Idciudad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColonia");

                    b.HasIndex("Idciudad");

                    b.ToTable("Colonia", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Contrato", b =>
                {
                    b.Property<int>("Idcontrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcontrato"));

                    b.Property<DateTime>("FechaContr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("Idsuscriptor")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioBase")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Idcontrato");

                    b.HasIndex("Idsuscriptor")
                        .IsUnique();

                    b.ToTable("Contrato", (string)null);
                });

            modelBuilder.Entity("megaapi.models.ContratoPaquete", b =>
                {
                    b.Property<int>("Idcontrato")
                        .HasColumnType("int");

                    b.Property<int>("Idpaquete")
                        .HasColumnType("int");

                    b.Property<int>("ContratoIdcontrato")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaqueteIdpaquete")
                        .HasColumnType("int");

                    b.HasKey("Idcontrato", "Idpaquete");

                    b.HasIndex("ContratoIdcontrato");

                    b.HasIndex("PaqueteIdpaquete");

                    b.ToTable("ContratoPaquete", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Paquete", b =>
                {
                    b.Property<int>("Idpaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpaquete"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioBase")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("Idpaquete");

                    b.ToTable("Paquete", (string)null);
                });

            modelBuilder.Entity("megaapi.models.PaqueteServicio", b =>
                {
                    b.Property<int>("Idpaquete")
                        .HasColumnType("int");

                    b.Property<int>("Idservicio")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteIdpaquete")
                        .HasColumnType("int");

                    b.Property<int>("ServicioIdservicio")
                        .HasColumnType("int");

                    b.HasKey("Idpaquete", "Idservicio");

                    b.HasIndex("PaqueteIdpaquete");

                    b.HasIndex("ServicioIdservicio");

                    b.ToTable("PaqueteServicio", (string)null);
                });

            modelBuilder.Entity("megaapi.models.PromoPersonalizada", b =>
                {
                    b.Property<int>("Idpromopersonalizada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpromopersonalizada"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Idcontrato")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioPorcen")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Idpromopersonalizada");

                    b.HasIndex("Idcontrato");

                    b.ToTable("PromoPersonalizada", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Promocion", b =>
                {
                    b.Property<int>("Idpromocion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpromocion"));

                    b.Property<byte>("Alcance")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioBase")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Vigencia")
                        .HasColumnType("datetime2");

                    b.HasKey("Idpromocion");

                    b.ToTable("Promocion", (string)null);
                });

            modelBuilder.Entity("megaapi.models.PromocionCiudad", b =>
                {
                    b.Property<int>("Idpromocion")
                        .HasColumnType("int");

                    b.Property<int>("Idciudad")
                        .HasColumnType("int");

                    b.Property<int>("CiudadIdciudad")
                        .HasColumnType("int");

                    b.Property<int>("PromocionIdpromocion")
                        .HasColumnType("int");

                    b.HasKey("Idpromocion", "Idciudad");

                    b.HasIndex("CiudadIdciudad");

                    b.HasIndex("PromocionIdpromocion");

                    b.ToTable("PromocionCiudad", (string)null);
                });

            modelBuilder.Entity("megaapi.models.PromocionColonia", b =>
                {
                    b.Property<int>("Idpromocion")
                        .HasColumnType("int");

                    b.Property<int>("Idcolonia")
                        .HasColumnType("int");

                    b.Property<int>("ColoniaIdColonia")
                        .HasColumnType("int");

                    b.Property<int>("PromocionIdpromocion")
                        .HasColumnType("int");

                    b.HasKey("Idpromocion", "Idcolonia");

                    b.HasIndex("ColoniaIdColonia");

                    b.HasIndex("PromocionIdpromocion");

                    b.ToTable("PromocionColonia", (string)null);
                });

            modelBuilder.Entity("megaapi.models.PromocionContrato", b =>
                {
                    b.Property<int>("Idpromocion")
                        .HasColumnType("int");

                    b.Property<int>("Idcontrato")
                        .HasColumnType("int");

                    b.Property<int>("ContratoIdcontrato")
                        .HasColumnType("int");

                    b.Property<int>("PromocionIdpromocion")
                        .HasColumnType("int");

                    b.HasKey("Idpromocion", "Idcontrato");

                    b.HasIndex("ContratoIdcontrato");

                    b.HasIndex("PromocionIdpromocion");

                    b.ToTable("PromocionContrato", (string)null);
                });

            modelBuilder.Entity("megaapi.models.PromocionPaquete", b =>
                {
                    b.Property<int>("Idpromocion")
                        .HasColumnType("int");

                    b.Property<int>("Idpaquete")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteIdpaquete")
                        .HasColumnType("int");

                    b.Property<int>("PromocionIdpromocion")
                        .HasColumnType("int");

                    b.HasKey("Idpromocion", "Idpaquete");

                    b.HasIndex("PaqueteIdpaquete");

                    b.HasIndex("PromocionIdpromocion");

                    b.ToTable("PromocionPaquete", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Servicio", b =>
                {
                    b.Property<int>("Idservicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idservicio"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioBase")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("Idservicio");

                    b.ToTable("Servicio", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Suscriptor", b =>
                {
                    b.Property<int>("Idsuscriptor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsuscriptor"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idcolonia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("Idsuscriptor");

                    b.HasIndex("Idcolonia");

                    b.ToTable("Suscriptor", (string)null);
                });

            modelBuilder.Entity("megaapi.models.Colonia", b =>
                {
                    b.HasOne("megaapi.models.Ciudad", "Ciudad")
                        .WithMany("Colonias")
                        .HasForeignKey("Idciudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("megaapi.models.Contrato", b =>
                {
                    b.HasOne("megaapi.models.Suscriptor", "Suscriptor")
                        .WithOne("Contrato")
                        .HasForeignKey("megaapi.models.Contrato", "Idsuscriptor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suscriptor");
                });

            modelBuilder.Entity("megaapi.models.ContratoPaquete", b =>
                {
                    b.HasOne("megaapi.models.Contrato", "Contrato")
                        .WithMany("Paquetes")
                        .HasForeignKey("ContratoIdcontrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("megaapi.models.Paquete", "Paquete")
                        .WithMany("Contratos")
                        .HasForeignKey("PaqueteIdpaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("megaapi.models.PaqueteServicio", b =>
                {
                    b.HasOne("megaapi.models.Paquete", "Paquete")
                        .WithMany("Servicios")
                        .HasForeignKey("PaqueteIdpaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("megaapi.models.Servicio", "Servicio")
                        .WithMany("Paquetes")
                        .HasForeignKey("ServicioIdservicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("megaapi.models.PromoPersonalizada", b =>
                {
                    b.HasOne("megaapi.models.Contrato", "Contrato")
                        .WithMany("PromosPersonalizadas")
                        .HasForeignKey("Idcontrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("megaapi.models.PromocionCiudad", b =>
                {
                    b.HasOne("megaapi.models.Ciudad", "Ciudad")
                        .WithMany("Promociones")
                        .HasForeignKey("CiudadIdciudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("megaapi.models.Promocion", "Promocion")
                        .WithMany("Ciudades")
                        .HasForeignKey("PromocionIdpromocion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("megaapi.models.PromocionColonia", b =>
                {
                    b.HasOne("megaapi.models.Colonia", "Colonia")
                        .WithMany("Promociones")
                        .HasForeignKey("ColoniaIdColonia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("megaapi.models.Promocion", "Promocion")
                        .WithMany("Colonias")
                        .HasForeignKey("PromocionIdpromocion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colonia");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("megaapi.models.PromocionContrato", b =>
                {
                    b.HasOne("megaapi.models.Contrato", "Contrato")
                        .WithMany("Promociones")
                        .HasForeignKey("ContratoIdcontrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("megaapi.models.Promocion", "Promocion")
                        .WithMany("Contratos")
                        .HasForeignKey("PromocionIdpromocion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("megaapi.models.PromocionPaquete", b =>
                {
                    b.HasOne("megaapi.models.Paquete", "Paquete")
                        .WithMany("Promociones")
                        .HasForeignKey("PaqueteIdpaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("megaapi.models.Promocion", "Promocion")
                        .WithMany("Paquetes")
                        .HasForeignKey("PromocionIdpromocion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");

                    b.Navigation("Promocion");
                });

            modelBuilder.Entity("megaapi.models.Suscriptor", b =>
                {
                    b.HasOne("megaapi.models.Colonia", "Colonia")
                        .WithMany("Suscriptores")
                        .HasForeignKey("Idcolonia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colonia");
                });

            modelBuilder.Entity("megaapi.models.Ciudad", b =>
                {
                    b.Navigation("Colonias");

                    b.Navigation("Promociones");
                });

            modelBuilder.Entity("megaapi.models.Colonia", b =>
                {
                    b.Navigation("Promociones");

                    b.Navigation("Suscriptores");
                });

            modelBuilder.Entity("megaapi.models.Contrato", b =>
                {
                    b.Navigation("Paquetes");

                    b.Navigation("Promociones");

                    b.Navigation("PromosPersonalizadas");
                });

            modelBuilder.Entity("megaapi.models.Paquete", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Promociones");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("megaapi.models.Promocion", b =>
                {
                    b.Navigation("Ciudades");

                    b.Navigation("Colonias");

                    b.Navigation("Contratos");

                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("megaapi.models.Servicio", b =>
                {
                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("megaapi.models.Suscriptor", b =>
                {
                    b.Navigation("Contrato")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
